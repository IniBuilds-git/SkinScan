# üß† SkinScan AI

**SkinScan AI** is an intelligent skin disease detection system that uses deep learning to analyze skin lesion images and provide quick, explainable predictions. It is built with **Flask**, **PyTorch**, and **EfficientNet**, offering a simple interface for users to upload images and receive diagnoses with visual heatmaps for transparency.

---

## üì∏ DEMO

(https://drive.google.com/file/d/1VuKBQxwMBczVSUNL6xjwMhyMYcbUH43h/view?usp=sharing)

---

## üöÄ Features

- ‚úÖ Upload skin lesion images
- üîç Predict dermatological conditions using an EfficientNet-B0 model
- üß† Explain predictions using Grad-CAM heatmaps
- üìÑ Display clinical recommendations per disease
- üíª Lightweight Flask application, easy to deploy

---

## üõ†Ô∏è Tech Stack

- **Language**: Python 3.8+
- **Web Framework**: Flask
- **Deep Learning**: PyTorch, TorchVision
- **Model**: EfficientNet-B0 (transfer learning)
- **Visualization**: Grad-CAM, Matplotlib
- **Frontend**: HTML/CSS 

---


## Installation and Setup

### Prerequisites

- Python 3.8+
- pip
- Virtual environment (recommended)

### Installation Steps

1. Clone the repository:
```bash
 git clone https://github.com/IniBuilds-git/SkinScan
 cd SkinScan
```

1.Create and activate a virtual environment:
```bash
 python -m venv venv
 source venv/bin/activate 
```
1. Install dependencies:
```bash
pip install -r requirements.txt
```

1. Download the dataset:
    - Download the [Skin Disease Dataset from Kaggle](https://www.kaggle.com/datasets/pacificrm/skindiseasedataset)
    - Extract it to the `data/raw/` directory

2. Run the notebook files step by step from data exploration, to data preprocessing and training, to model evaluation 
3. Run the Flask application:
```bash
 python app.py
```
1. Open a web browser and go to `http://127.0.0.1:5000/`

## Usage
1. **Upload an image** of the affected skin area using the web interface
2. **Wait for analysis** as the AI processes the image
3. **View the results** showing the detected skin condition, confidence levels, and recommendations
4. **Read additional information** about the condition and next steps

## Model Training and Evaluation

### Training Process

The model was trained using a two-phase approach:

1. **Feature Extraction**: Initial training with a frozen EfficientNet-B0 base model and custom classification head
2. **Fine-tuning**: Additional training with unfrozen top layers of the base model

### Performance Metrics

- **Accuracy**: 92.3% on the test set
- **Precision**: 0.91 weighted average
- **Recall**: 0.89 weighted average
- **F1-Score**: 0.90 weighted average

## Ethical Considerations

SkinScan AI was developed with careful attention to ethical considerations:

- **Medical Disclaimer**: The system clearly states it is for educational purposes only and not a replacement for professional medical advice
- **Data Privacy**: Uploaded images are processed locally and not stored permanently without explicit consent
- **Bias Mitigation**: The training dataset includes diverse skin tones and conditions
- **Transparency**: The system provides confidence scores to indicate the reliability of predictions

## Future Improvements

- Expand the dataset with more diverse skin conditions and skin tones
- Implement more advanced model architectures and ensemble techniques
- Develop a mobile application for improved accessibility
- Add symptom tracking functionality for monitoring progress over time
- Integrate with telemedicine platforms for seamless doctor consultations



